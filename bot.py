import telebot
import requests
import openai

# ====== –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ò –¢–û–ö–ï–ù–´ ======
TELEGRAM_TOKEN = '7753608741:AAGuR4R7wwwPKLgViJ-_nwnBLVk-FJ4r7KQ'
OPENAI_API_KEY = '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'
# ====================================

bot = telebot.TeleBot('7753608741:AAGuR4R7wwwPKLgViJ-_nwnBLVk-FJ4r7KQ')
openai.api_key = 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

# ===== –§–£–ù–ö–¶–ò–Ø –ü–û–ì–û–î–´ =====
def get_weather(city):
    url = f"https://api.open-meteo.com/v1/forecast?latitude=55.75&longitude=37.61&current_weather=true"
    params = {
        "current_weather": "true",
        "timezone": "Europe/Moscow"
    }
    response = requests.get(url, params=params)
    data = response.json()
    temp = data['current_weather']['temperature']
    wind = data['current_weather']['windspeed']
    return f"–°–µ–π—á–∞—Å –≤ {city}: {temp}¬∞C, –≤–µ—Ç–µ—Ä {wind} –∫–º/—á."

# ===== –§–£–ù–ö–¶–ò–Ø YOUTUBE =====
def get_youtube_link(query):
    return f"https://www.youtube.com/results?search_query={query.replace(' ', '+')}"

# ===== –§–£–ù–ö–¶–ò–Ø GPT =====
def ask_gpt(question):
    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "user", "content": question}
        ]
    )
    return response['choices'][0]['message']['content']

# ======= –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î =======

@bot.message_handler(commands=['start'])
def start(message):
    text = ("–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –±–æ—Ç-–∏–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä!\n\n"
            "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
            "/weather [–≥–æ—Ä–æ–¥] ‚Äî –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
            "/schedule ‚Äî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
            "/youtube [–∑–∞–ø—Ä–æ—Å] ‚Äî –ù–∞–π—Ç–∏ –≤–∏–¥–µ–æ –Ω–∞ YouTube\n"
            "/ask [–≤–æ–ø—Ä–æ—Å] ‚Äî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT\n")
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['weather'])
def weather(message):
    parts = message.text.split(maxsplit=1)
    if len(parts) == 2:
        city = parts[1]
        weather_info = get_weather(city)
        bot.send_message(message.chat.id, weather_info)
    else:
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /weather –ú–æ—Å–∫–≤–∞')

@bot.message_handler(commands=['schedule'])
def schedule(message):
    schedule_text = ("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
                     "1Ô∏è‚É£ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ ‚Äî 09:00\n"
                     "2Ô∏è‚É£ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ ‚Äî 10:00\n"
                     "3Ô∏è‚É£ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ ‚Äî 11:30\n"
                     "4Ô∏è‚É£ –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ ‚Äî 13:00")
    bot.send_message(message.chat.id, schedule_text)

@bot.message_handler(commands=['youtube'])
def youtube(message):
    parts = message.text.split(maxsplit=1)
    if len(parts) == 2:
        query = parts[1]
        link = get_youtube_link(query)
        bot.send_message(message.chat.id, f'üîó –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube:\n{link}')
    else:
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /youtube –∫–æ—Ç–∏–∫–∏')

@bot.message_handler(commands=['ask'])
def ask(message):
    parts = message.text.split(maxsplit=1)
    if len(parts) == 2:
        question = parts[1]
        reply = ask_gpt(question)
        bot.send_message(message.chat.id, reply)
    else:
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /ask –ß—Ç–æ —Ç–∞–∫–æ–µ Python?')

# ======= –ó–ê–ü–£–°–ö =======
bot.polling(none_stop=True)
